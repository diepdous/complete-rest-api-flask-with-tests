#!/bin/bash

print_usage(){
  echo "Usage: $0 <dev | test | prod> [--lemans-proxy] [--help] [ARGS...]"
}

print_help_and_exit(){
  echo "dcTool - Outil d'aide à la commande pour la gestion de vos piles Docker."
  echo
  print_usage
  echo "Environnement : "
  echo "  dev :                  utilise la pile de services pour l'environnement de développement."
  echo "  test :                 utilise la pile de services pour l'environnement de tests."
  echo "  prod :                 utilise la pile de services pour l'environnement de recette ou de production."
  echo
  echo "Paramètres optionnels :"
  echo "  -lmp, --lemans-proxy  : configure la pile pour être exploitée derrière le proxy de Le Mans Université"
  echo "  - -h, --help : affiche cette aide."
  echo " ARGS :                  exemple des arguments pour docker-compose (ex.: up)"
  exit 0
}

# Local .env
if [ -f .env ]; then
    # Load Environment Variables
    export $(cat .env | grep -v '#' | awk '/=/ {print $1}')
    echo "Mon projet:${SHORT_NAME_PROJECT}"
else
  PRJ_NAME=myapp
fi

if [ $# -eq 0 ]; then
  echo "Mauvais paramètres" >&2
  print_usage
  exit 1
fi

case $1 in
  dev|test|prod) typeEnv=$1;;
  -h|--help) print_help_and_exit;;
  *)
    echo "Paramètre incorrect \"$1\"" >&2;
    print_usage
    exit 1;;
esac
shift

if [ "$1" == "-lmp" -o "$1" == "--lemans-proxy" ]; then
  useProxyEnv=1
  shift
fi

if [ "$1" == "-h" -o "$1" == "--help" ]; then
  print_help_and_exit
fi

case ${typeEnv} in

  dev)
    if [ ! -z "${useProxyEnv}" ] ; then
      dcFile="../docker/docker-compose-dev-lemansproxy.yml"
    else
      dcFile="../docker/docker-compose-dev.yml"
    fi
    prjName="${SHORT_NAME_PROJECT}-dev"
    ;;

  test)
      if [ ! -z "${useProxyEnv}" ] ; then
        dcFile="../docker/docker-compose-test-lemansproxy.yml"
      else
        dcFile="../docker/docker-compose-test.yml"
      fi
      prjName="${SHORT_NAME_PROJECT}-test"
    ;;

  prod)
    if [ ! -z "${useProxyEnv}" ] ; then
      dcFile="../docker/docker-compose-prod-lemansproxy.yml"
    else
      dcFile="../docker/docker-compose-prod.yml"
    fi
    prjName="${SHORT_NAME_PROJECT}-prod"
    ;;
esac

echo "Nom pile Docker:${prjName}"

set -x
docker-compose -f ${dcFile} -p ${prjName} $@
exit $?
